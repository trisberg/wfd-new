where-for-dinner:
  notifications:
    logger:
       enabled: true

server.port: 8085

spring:
  application:
    name: where-for-dinner-notify

  config:
    import: 'optional:configserver:'

  cloud: 
    function:
      definition: notifyAvailability  
    stream:
      defaultBinder: rabbit
      bindings: 
        notifyAvailability-in-0: 
          destination: where-for-dinner-search-result
          group: where-for-dinner-notify-group
          consumer: 
            maxAttempts: 4
            backOffInitialInterval: 15000
            backOffMaxInterval: 60000 

    refresh.enabled: false   

eureka:
  client:
    enabled: false

---

spring:
  config.activate.on-profile: kafka
  
  cloud: 
    stream:
      defaultBinder: kafka

  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration

management:
  health:
    rabbit:
      enabled: false

---

spring:
  config.activate.on-profile: kinesis
  
  cloud: 
    stream:
      defaultBinder: kinesis
      
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration

management:
  health:
    rabbit:
      enabled: false
      
---

spring:
  config.activate.on-profile: eureka
  
eureka:
  client:
    enabled: true

          